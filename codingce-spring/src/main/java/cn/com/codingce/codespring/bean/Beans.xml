<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!--
    scope =
         singleton Âú®spring IoCÂÆπÂô®‰ªÖÂ≠òÂú®‰∏Ä‰∏™BeanÂÆû‰æãÔºåBean‰ª•Âçï‰æãÊñπÂºèÂ≠òÂú®ÔºåÈªòËÆ§ÂÄº
         prototype ÊØèÊ¨°‰ªéÂÆπÂô®‰∏≠Ë∞ÉÁî®BeanÊó∂ÔºåÈÉΩËøîÂõû‰∏Ä‰∏™Êñ∞ÁöÑÂÆû‰æãÔºåÂç≥ÊØèÊ¨°Ë∞ÉÁî®getBean()Êó∂ÔºåÁõ∏ÂΩì‰∫éÊâßË°ånewXxxBean()
         request ÊØèÊ¨°HTTPËØ∑Ê±ÇÈÉΩ‰ºöÂàõÂª∫‰∏Ä‰∏™Êñ∞ÁöÑBeanÔºåËØ•‰ΩúÁî®Âüü‰ªÖÈÄÇÁî®‰∫éWebApplicationContextÁéØÂ¢É
         session Âêå‰∏Ä‰∏™HTTP SessionÂÖ±‰∫´‰∏Ä‰∏™BeanÔºå‰∏çÂêåSession‰ΩøÁî®‰∏çÂêåÁöÑBeanÔºå‰ªÖÈÄÇÁî®‰∫éWebApplicationContextÁéØÂ¢É
         global-session ‰∏ÄËà¨Áî®‰∫éPortletÂ∫îÁî®ÁéØÂ¢ÉÔºåËØ•ËøêÁî®Âüü‰ªÖÈÄÇÁî®‰∫éWebApplicationContextÁéØÂ¢É
    -->
    <bean id="helloWorld" class="cn.com.codingce.codespring.entity.HelloWorld" scope="prototype"
          init-method="init"
          destroy-method="destroy"
    >
        <property name="message1" value="Hello World!"/>
        <property name="message2" value="Hello Second World!"/>
    </bean>

    <!--Spring Bean ÂêéÁΩÆÂ§ÑÁêÜÂô®-->
    <bean class="cn.com.codingce.codespring.postprocessor.InitHelloWorld" />

    <!--Spring Bean ÂÆö‰πâÁªßÊâø
    Spring Bean ÂÆö‰πâÁöÑÁªßÊâø‰∏é Java Á±ªÁöÑÁªßÊâøÊó†ÂÖ≥Ôºå‰ΩÜÊòØÁªßÊâøÁöÑÊ¶ÇÂøµÊòØ‰∏ÄÊ†∑ÁöÑ„ÄÇ
    ‰Ω†ÂèØ‰ª•ÂÆö‰πâ‰∏Ä‰∏™Áà∂ bean ÁöÑÂÆö‰πâ‰Ωú‰∏∫Ê®°ÊùøÂíåÂÖ∂‰ªñÂ≠ê bean Â∞±ÂèØ‰ª•‰ªéÁà∂ bean ‰∏≠ÁªßÊâøÊâÄÈúÄÁöÑÈÖçÁΩÆ„ÄÇ
    -->
    <bean id="inherit" class="cn.com.codingce.codespring.entity.Inherit" parent="helloWorld">
        <property name="message1" value="Inherit India!"/>
        <property name="message3" value="Inherit India!"/>
    </bean>

    <!-- ÂÆÉÊúâÂü∫‰∫éÊûÑÈÄ†ÂáΩÊï∞Ê≥®ÂÖ•ÁöÑÈÖçÁΩÆ -->
    <bean id="textEditor" class="cn.com.codingce.codespring.entity.TextEditor">
<!--        <constructor-arg ref="spellChecker"/>-->
        <property name="spellCheck" ref="spellChecker"/>
    </bean>

    <!-- Spring Âü∫‰∫éËÆæÂÄºÂáΩÊï∞ÁöÑ‰æùËµñÊ≥®ÂÖ• -->
    <bean id="spellChecker" class="cn.com.codingce.codespring.entity.SpellChecker">
    </bean>

    <!-- Spring Ê≥®ÂÖ•ÂÜÖÈÉ® Beans -->
    <bean id="injectTextEditor" class="cn.com.codingce.codespring.entity.InjectTextEditor">
        <property name="InjectSpellChecker">
            <bean id="injectspellChecker" class="cn.com.codingce.codespring.entity.InjectSpellChecker"/>
        </property>
    </bean>

    <!-- Spring Ê≥®ÂÖ•ÈõÜÂêà -->
    <bean id="address" class="cn.com.codingce.codespring.entity.Address">

        <!-- results in a setAddressList(java.util.List) call -->
        <property name="addressList">
            <list>
                <value>INDIA</value>
                <value>Pakistan</value>
                <value>USA</value>
                <value>USA</value>
            </list>
        </property>

        <!-- results in a setAddressSet(java.util.Set) call -->
        <property name="addressSet">
            <set>
                <value>INDIA</value>
                <value>Pakistan</value>
                <value>USA</value>
                <value>USA</value>
            </set>
        </property>

        <!-- results in a setAddressMap(java.util.Map) call -->
        <property name="addressMap">
            <map>
                <entry key="1" value="INDIA"/>
                <entry key="2" value="Pakistan"/>
                <entry key="3" value="USA"/>
                <entry key="4" value="USA"/>
            </map>
        </property>

        <!-- results in a setAddressProp(java.util.Properties) call -->
        <property name="addressProp">
            <props>
                <prop key="one">Êéå‰∏äÁºñÁ®ã</prop>
                <prop key="two">È©¨ÊÄª</prop>
                <prop key="three">üêß</prop>
                <prop key="four">Java</prop>
            </props>
        </property>
    </bean>

    <!--Ê≠£Â∏∏ÊÉÖÂÜµ‰∏ãÁöÑÈÖçÁΩÆ-->
<!--    <bean id="auto" class="cn.com.codingce.codespring.entity.Auto">-->
<!--        <property name="autoSpellChecker" ref="autospellchecker" />-->
<!--        <property name="name" value="Êéå‰∏äÁºñÁ®ã"/>-->
<!--    </bean>-->

<!--    <bean id="autospellchecker" class="cn.com.codingce.codespring.entity.AutoSpellChecker">-->
<!--    </bean>-->

    <!--Ëá™Âä® byName-->
<!--    <bean id="auto" class="cn.com.codingce.codespring.entity.Auto" autowire="byName">-->
<!--        <property name="name" value="Êéå‰∏äÁºñÁ®ã"/>-->
<!--    </bean>-->

<!--    <bean id="autoSpellChecker" class="cn.com.codingce.codespring.entity.AutoSpellChecker">-->
<!--    </bean>-->

    <!--Ëá™Âä® byType-->
<!--    <bean id="auto" class="cn.com.codingce.codespring.entity.Auto" autowire="byType">-->
<!--        <property name="name" value="Êéå‰∏äÁºñÁ®ã"/>-->
<!--    </bean>-->

<!--    <bean id="autoSpellChecker" class="cn.com.codingce.codespring.entity.AutoSpellChecker">-->
<!--    </bean>-->

    <!--Spring Áî±ÊûÑÈÄ†ÂáΩÊï∞Ëá™Âä®Ë£ÖÈÖç ÂéüÁâà-->
<!--    <bean id="auto" class="cn.com.codingce.codespring.entity.Auto">-->
<!--        <constructor-arg ref="autoSpellChecker"/>-->
<!--        <constructor-arg value="ÂòøÂòøÔºÅÊàëÊòØÂú®beanÈáåÈù¢ËµãÂÄºÁöÑ"/>-->
<!--    </bean>-->

<!--    <bean id="autoSpellChecker" class="cn.com.codingce.codespring.entity.AutoSpellChecker">-->
<!--    </bean>-->

    <!--Áî±ÊûÑÈÄ†ÂáΩÊï∞Ëá™Âä®Ë£ÖÈÖç-->
    <bean id="auto" class="cn.com.codingce.codespring.entity.Auto" autowire="constructor">
        <constructor-arg value="ÂòøÂòøÔºÅÊàëÊòØÂú®beanÈáåÈù¢ËµãÂÄºÁöÑ"/>
    </bean>
    <bean id="autoSpellChecker" class="cn.com.codingce.codespring.entity.AutoSpellChecker">
    </bean>

</beans>